trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x.x' # Use your .NET 8 SDK version
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'publish'
      publishWebProjects: true
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'

  - task: AzureWebApp@1
    inputs:
      azureSubscription: 'azure-connection'             # name of your service connection
      appType: 'webApp'                                 # or 'webAppLinux' for Linux
      appName: 'ojaswiffodplanet'                # name of your Azure Web App
      package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
